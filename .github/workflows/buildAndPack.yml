# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
    #- run: npm test
    - name: Cache
      uses: actions/cache@v2.1.4
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: node-modules/
        # An explicit key for restoring and saving the cache
        key: main-v1-$(date +'%Y-%m-%d')
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: main-v1-$(date +'%Y-%m-%d') main
        # The chunk size used to split up large files during upload, in bytes
        #upload-chunk-size: # optional
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME}}
        password: ${{ secrets.DOCKERHUB_TOKEN}}
    - name: Build and Push The Docker Image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME}}/demo:latest
    - name: Image Digest
      run: echo ${{ steps.docker_build.outputs.digest }}
#    - name: Archive production artifacts
#      uses: actions/upload-artifact@v2
#      with:
#        name: html
#        path: public/
